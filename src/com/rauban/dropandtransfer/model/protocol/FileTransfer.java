// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/FileTransfer.proto

package com.rauban.dropandtransfer.model.protocol;

public final class FileTransfer {
  private FileTransfer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FileDropHeaderOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint64 size = 1;
    boolean hasSize();
    long getSize();
    
    // required bool isDir = 2;
    boolean hasIsDir();
    boolean getIsDir();
    
    // required string resourceName = 3;
    boolean hasResourceName();
    String getResourceName();
  }
  public static final class FileDropHeader extends
      com.google.protobuf.GeneratedMessage
      implements FileDropHeaderOrBuilder {
    // Use FileDropHeader.newBuilder() to construct.
    private FileDropHeader(Builder builder) {
      super(builder);
    }
    private FileDropHeader(boolean noInit) {}
    
    private static final FileDropHeader defaultInstance;
    public static FileDropHeader getDefaultInstance() {
      return defaultInstance;
    }
    
    public FileDropHeader getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_FileDropHeader_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_FileDropHeader_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint64 size = 1;
    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_;
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getSize() {
      return size_;
    }
    
    // required bool isDir = 2;
    public static final int ISDIR_FIELD_NUMBER = 2;
    private boolean isDir_;
    public boolean hasIsDir() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getIsDir() {
      return isDir_;
    }
    
    // required string resourceName = 3;
    public static final int RESOURCENAME_FIELD_NUMBER = 3;
    private java.lang.Object resourceName_;
    public boolean hasResourceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getResourceName() {
      java.lang.Object ref = resourceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          resourceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getResourceNameBytes() {
      java.lang.Object ref = resourceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        resourceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      size_ = 0L;
      isDir_ = false;
      resourceName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsDir()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResourceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isDir_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getResourceNameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isDir_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getResourceNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_FileDropHeader_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_FileDropHeader_fieldAccessorTable;
      }
      
      // Construct using com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        isDir_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        resourceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.getDescriptor();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader getDefaultInstanceForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.getDefaultInstance();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader build() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader buildPartial() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader result = new com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isDir_ = isDir_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.resourceName_ = resourceName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader) {
          return mergeFrom((com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader other) {
        if (other == com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasIsDir()) {
          setIsDir(other.getIsDir());
        }
        if (other.hasResourceName()) {
          setResourceName(other.getResourceName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasIsDir()) {
          
          return false;
        }
        if (!hasResourceName()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isDir_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              resourceName_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 size = 1;
      private long size_ ;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getSize() {
        return size_;
      }
      public Builder setSize(long value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        onChanged();
        return this;
      }
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        onChanged();
        return this;
      }
      
      // required bool isDir = 2;
      private boolean isDir_ ;
      public boolean hasIsDir() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getIsDir() {
        return isDir_;
      }
      public Builder setIsDir(boolean value) {
        bitField0_ |= 0x00000002;
        isDir_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsDir() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isDir_ = false;
        onChanged();
        return this;
      }
      
      // required string resourceName = 3;
      private java.lang.Object resourceName_ = "";
      public boolean hasResourceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getResourceName() {
        java.lang.Object ref = resourceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          resourceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setResourceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        resourceName_ = value;
        onChanged();
        return this;
      }
      public Builder clearResourceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        resourceName_ = getDefaultInstance().getResourceName();
        onChanged();
        return this;
      }
      void setResourceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        resourceName_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.rauban.dropandtransfer.model.protocol.FileDropHeader)
    }
    
    static {
      defaultInstance = new FileDropHeader(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.rauban.dropandtransfer.model.protocol.FileDropHeader)
  }
  
  public interface TransferOfferOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint64 offerId = 1;
    boolean hasOfferId();
    long getOfferId();
    
    // required uint32 ttl = 2;
    boolean hasTtl();
    int getTtl();
    
    // repeated .com.rauban.dropandtransfer.model.protocol.FileDropHeader resources = 3;
    java.util.List<com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader> 
        getResourcesList();
    com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader getResources(int index);
    int getResourcesCount();
    java.util.List<? extends com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder> 
        getResourcesOrBuilderList();
    com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder getResourcesOrBuilder(
        int index);
  }
  public static final class TransferOffer extends
      com.google.protobuf.GeneratedMessage
      implements TransferOfferOrBuilder {
    // Use TransferOffer.newBuilder() to construct.
    private TransferOffer(Builder builder) {
      super(builder);
    }
    private TransferOffer(boolean noInit) {}
    
    private static final TransferOffer defaultInstance;
    public static TransferOffer getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransferOffer getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_TransferOffer_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_TransferOffer_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint64 offerId = 1;
    public static final int OFFERID_FIELD_NUMBER = 1;
    private long offerId_;
    public boolean hasOfferId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getOfferId() {
      return offerId_;
    }
    
    // required uint32 ttl = 2;
    public static final int TTL_FIELD_NUMBER = 2;
    private int ttl_;
    public boolean hasTtl() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTtl() {
      return ttl_;
    }
    
    // repeated .com.rauban.dropandtransfer.model.protocol.FileDropHeader resources = 3;
    public static final int RESOURCES_FIELD_NUMBER = 3;
    private java.util.List<com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader> resources_;
    public java.util.List<com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader> getResourcesList() {
      return resources_;
    }
    public java.util.List<? extends com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder> 
        getResourcesOrBuilderList() {
      return resources_;
    }
    public int getResourcesCount() {
      return resources_.size();
    }
    public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader getResources(int index) {
      return resources_.get(index);
    }
    public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder getResourcesOrBuilder(
        int index) {
      return resources_.get(index);
    }
    
    private void initFields() {
      offerId_ = 0L;
      ttl_ = 0;
      resources_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasOfferId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTtl()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getResourcesCount(); i++) {
        if (!getResources(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, offerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, ttl_);
      }
      for (int i = 0; i < resources_.size(); i++) {
        output.writeMessage(3, resources_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, offerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ttl_);
      }
      for (int i = 0; i < resources_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, resources_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOfferOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_TransferOffer_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_TransferOffer_fieldAccessorTable;
      }
      
      // Construct using com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getResourcesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        offerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        ttl_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (resourcesBuilder_ == null) {
          resources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          resourcesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer.getDescriptor();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer getDefaultInstanceForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer.getDefaultInstance();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer build() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer buildPartial() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer result = new com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.offerId_ = offerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ttl_ = ttl_;
        if (resourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            resources_ = java.util.Collections.unmodifiableList(resources_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.resources_ = resources_;
        } else {
          result.resources_ = resourcesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer) {
          return mergeFrom((com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer other) {
        if (other == com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer.getDefaultInstance()) return this;
        if (other.hasOfferId()) {
          setOfferId(other.getOfferId());
        }
        if (other.hasTtl()) {
          setTtl(other.getTtl());
        }
        if (resourcesBuilder_ == null) {
          if (!other.resources_.isEmpty()) {
            if (resources_.isEmpty()) {
              resources_ = other.resources_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureResourcesIsMutable();
              resources_.addAll(other.resources_);
            }
            onChanged();
          }
        } else {
          if (!other.resources_.isEmpty()) {
            if (resourcesBuilder_.isEmpty()) {
              resourcesBuilder_.dispose();
              resourcesBuilder_ = null;
              resources_ = other.resources_;
              bitField0_ = (bitField0_ & ~0x00000004);
              resourcesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getResourcesFieldBuilder() : null;
            } else {
              resourcesBuilder_.addAllMessages(other.resources_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasOfferId()) {
          
          return false;
        }
        if (!hasTtl()) {
          
          return false;
        }
        for (int i = 0; i < getResourcesCount(); i++) {
          if (!getResources(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              offerId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ttl_ = input.readUInt32();
              break;
            }
            case 26: {
              com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder subBuilder = com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addResources(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 offerId = 1;
      private long offerId_ ;
      public boolean hasOfferId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getOfferId() {
        return offerId_;
      }
      public Builder setOfferId(long value) {
        bitField0_ |= 0x00000001;
        offerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearOfferId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        offerId_ = 0L;
        onChanged();
        return this;
      }
      
      // required uint32 ttl = 2;
      private int ttl_ ;
      public boolean hasTtl() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTtl() {
        return ttl_;
      }
      public Builder setTtl(int value) {
        bitField0_ |= 0x00000002;
        ttl_ = value;
        onChanged();
        return this;
      }
      public Builder clearTtl() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ttl_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .com.rauban.dropandtransfer.model.protocol.FileDropHeader resources = 3;
      private java.util.List<com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader> resources_ =
        java.util.Collections.emptyList();
      private void ensureResourcesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          resources_ = new java.util.ArrayList<com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader>(resources_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder> resourcesBuilder_;
      
      public java.util.List<com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader> getResourcesList() {
        if (resourcesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(resources_);
        } else {
          return resourcesBuilder_.getMessageList();
        }
      }
      public int getResourcesCount() {
        if (resourcesBuilder_ == null) {
          return resources_.size();
        } else {
          return resourcesBuilder_.getCount();
        }
      }
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader getResources(int index) {
        if (resourcesBuilder_ == null) {
          return resources_.get(index);
        } else {
          return resourcesBuilder_.getMessage(index);
        }
      }
      public Builder setResources(
          int index, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResourcesIsMutable();
          resources_.set(index, value);
          onChanged();
        } else {
          resourcesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setResources(
          int index, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          resources_.set(index, builderForValue.build());
          onChanged();
        } else {
          resourcesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addResources(com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResourcesIsMutable();
          resources_.add(value);
          onChanged();
        } else {
          resourcesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addResources(
          int index, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader value) {
        if (resourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResourcesIsMutable();
          resources_.add(index, value);
          onChanged();
        } else {
          resourcesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addResources(
          com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          resources_.add(builderForValue.build());
          onChanged();
        } else {
          resourcesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addResources(
          int index, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder builderForValue) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          resources_.add(index, builderForValue.build());
          onChanged();
        } else {
          resourcesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllResources(
          java.lang.Iterable<? extends com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader> values) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          super.addAll(values, resources_);
          onChanged();
        } else {
          resourcesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearResources() {
        if (resourcesBuilder_ == null) {
          resources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          resourcesBuilder_.clear();
        }
        return this;
      }
      public Builder removeResources(int index) {
        if (resourcesBuilder_ == null) {
          ensureResourcesIsMutable();
          resources_.remove(index);
          onChanged();
        } else {
          resourcesBuilder_.remove(index);
        }
        return this;
      }
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder getResourcesBuilder(
          int index) {
        return getResourcesFieldBuilder().getBuilder(index);
      }
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder getResourcesOrBuilder(
          int index) {
        if (resourcesBuilder_ == null) {
          return resources_.get(index);  } else {
          return resourcesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder> 
           getResourcesOrBuilderList() {
        if (resourcesBuilder_ != null) {
          return resourcesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(resources_);
        }
      }
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder addResourcesBuilder() {
        return getResourcesFieldBuilder().addBuilder(
            com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.getDefaultInstance());
      }
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder addResourcesBuilder(
          int index) {
        return getResourcesFieldBuilder().addBuilder(
            index, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.getDefaultInstance());
      }
      public java.util.List<com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder> 
           getResourcesBuilderList() {
        return getResourcesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder> 
          getResourcesFieldBuilder() {
        if (resourcesBuilder_ == null) {
          resourcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder, com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeaderOrBuilder>(
                  resources_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          resources_ = null;
        }
        return resourcesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:com.rauban.dropandtransfer.model.protocol.TransferOffer)
    }
    
    static {
      defaultInstance = new TransferOffer(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.rauban.dropandtransfer.model.protocol.TransferOffer)
  }
  
  public interface TransferResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint64 offerId = 1;
    boolean hasOfferId();
    long getOfferId();
    
    // required bool accept = 2;
    boolean hasAccept();
    boolean getAccept();
  }
  public static final class TransferResponse extends
      com.google.protobuf.GeneratedMessage
      implements TransferResponseOrBuilder {
    // Use TransferResponse.newBuilder() to construct.
    private TransferResponse(Builder builder) {
      super(builder);
    }
    private TransferResponse(boolean noInit) {}
    
    private static final TransferResponse defaultInstance;
    public static TransferResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public TransferResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_TransferResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_TransferResponse_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint64 offerId = 1;
    public static final int OFFERID_FIELD_NUMBER = 1;
    private long offerId_;
    public boolean hasOfferId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getOfferId() {
      return offerId_;
    }
    
    // required bool accept = 2;
    public static final int ACCEPT_FIELD_NUMBER = 2;
    private boolean accept_;
    public boolean hasAccept() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getAccept() {
      return accept_;
    }
    
    private void initFields() {
      offerId_ = 0L;
      accept_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasOfferId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccept()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, offerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, accept_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, offerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, accept_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_TransferResponse_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_TransferResponse_fieldAccessorTable;
      }
      
      // Construct using com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        offerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        accept_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse.getDescriptor();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse getDefaultInstanceForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse.getDefaultInstance();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse build() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse buildPartial() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse result = new com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.offerId_ = offerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.accept_ = accept_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse) {
          return mergeFrom((com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse other) {
        if (other == com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse.getDefaultInstance()) return this;
        if (other.hasOfferId()) {
          setOfferId(other.getOfferId());
        }
        if (other.hasAccept()) {
          setAccept(other.getAccept());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasOfferId()) {
          
          return false;
        }
        if (!hasAccept()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              offerId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              accept_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 offerId = 1;
      private long offerId_ ;
      public boolean hasOfferId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getOfferId() {
        return offerId_;
      }
      public Builder setOfferId(long value) {
        bitField0_ |= 0x00000001;
        offerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearOfferId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        offerId_ = 0L;
        onChanged();
        return this;
      }
      
      // required bool accept = 2;
      private boolean accept_ ;
      public boolean hasAccept() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getAccept() {
        return accept_;
      }
      public Builder setAccept(boolean value) {
        bitField0_ |= 0x00000002;
        accept_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccept() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accept_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.rauban.dropandtransfer.model.protocol.TransferResponse)
    }
    
    static {
      defaultInstance = new TransferResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.rauban.dropandtransfer.model.protocol.TransferResponse)
  }
  
  public interface ChatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string message = 1;
    boolean hasMessage();
    String getMessage();
  }
  public static final class Chat extends
      com.google.protobuf.GeneratedMessage
      implements ChatOrBuilder {
    // Use Chat.newBuilder() to construct.
    private Chat(Builder builder) {
      super(builder);
    }
    private Chat(boolean noInit) {}
    
    private static final Chat defaultInstance;
    public static Chat getDefaultInstance() {
      return defaultInstance;
    }
    
    public Chat getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_Chat_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_Chat_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rauban.dropandtransfer.model.protocol.FileTransfer.ChatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_Chat_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_Chat_fieldAccessorTable;
      }
      
      // Construct using com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat.getDescriptor();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat getDefaultInstanceForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat.getDefaultInstance();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat build() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat buildPartial() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat result = new com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat) {
          return mergeFrom((com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat other) {
        if (other == com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMessage()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              message_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string message = 1;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.rauban.dropandtransfer.model.protocol.Chat)
    }
    
    static {
      defaultInstance = new Chat(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.rauban.dropandtransfer.model.protocol.Chat)
  }
  
  public interface FileDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint64 offerId = 1;
    boolean hasOfferId();
    long getOfferId();
    
    // required bytes data = 2;
    boolean hasData();
    com.google.protobuf.ByteString getData();
  }
  public static final class FileData extends
      com.google.protobuf.GeneratedMessage
      implements FileDataOrBuilder {
    // Use FileData.newBuilder() to construct.
    private FileData(Builder builder) {
      super(builder);
    }
    private FileData(boolean noInit) {}
    
    private static final FileData defaultInstance;
    public static FileData getDefaultInstance() {
      return defaultInstance;
    }
    
    public FileData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_FileData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_FileData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint64 offerId = 1;
    public static final int OFFERID_FIELD_NUMBER = 1;
    private long offerId_;
    public boolean hasOfferId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getOfferId() {
      return offerId_;
    }
    
    // required bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    
    private void initFields() {
      offerId_ = 0L;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasOfferId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, offerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, offerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_FileData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.internal_static_com_rauban_dropandtransfer_model_protocol_FileData_fieldAccessorTable;
      }
      
      // Construct using com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        offerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData.getDescriptor();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData getDefaultInstanceForType() {
        return com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData.getDefaultInstance();
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData build() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData buildPartial() {
        com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData result = new com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.offerId_ = offerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData) {
          return mergeFrom((com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData other) {
        if (other == com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData.getDefaultInstance()) return this;
        if (other.hasOfferId()) {
          setOfferId(other.getOfferId());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasOfferId()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              offerId_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              data_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 offerId = 1;
      private long offerId_ ;
      public boolean hasOfferId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getOfferId() {
        return offerId_;
      }
      public Builder setOfferId(long value) {
        bitField0_ |= 0x00000001;
        offerId_ = value;
        onChanged();
        return this;
      }
      public Builder clearOfferId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        offerId_ = 0L;
        onChanged();
        return this;
      }
      
      // required bytes data = 2;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        data_ = value;
        onChanged();
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.rauban.dropandtransfer.model.protocol.FileData)
    }
    
    static {
      defaultInstance = new FileData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.rauban.dropandtransfer.model.protocol.FileData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rauban_dropandtransfer_model_protocol_FileDropHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_rauban_dropandtransfer_model_protocol_FileDropHeader_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rauban_dropandtransfer_model_protocol_TransferOffer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_rauban_dropandtransfer_model_protocol_TransferOffer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rauban_dropandtransfer_model_protocol_TransferResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_rauban_dropandtransfer_model_protocol_TransferResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rauban_dropandtransfer_model_protocol_Chat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_rauban_dropandtransfer_model_protocol_Chat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_rauban_dropandtransfer_model_protocol_FileData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_rauban_dropandtransfer_model_protocol_FileData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033protocol/FileTransfer.proto\022)com.rauba" +
      "n.dropandtransfer.model.protocol\"C\n\016File" +
      "DropHeader\022\014\n\004size\030\001 \002(\004\022\r\n\005isDir\030\002 \002(\010\022" +
      "\024\n\014resourceName\030\003 \002(\t\"{\n\rTransferOffer\022\017" +
      "\n\007offerId\030\001 \002(\004\022\013\n\003ttl\030\002 \002(\r\022L\n\tresource" +
      "s\030\003 \003(\01329.com.rauban.dropandtransfer.mod" +
      "el.protocol.FileDropHeader\"3\n\020TransferRe" +
      "sponse\022\017\n\007offerId\030\001 \002(\004\022\016\n\006accept\030\002 \002(\010\"" +
      "\027\n\004Chat\022\017\n\007message\030\001 \002(\t\")\n\010FileData\022\017\n\007" +
      "offerId\030\001 \002(\004\022\014\n\004data\030\002 \002(\014"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_rauban_dropandtransfer_model_protocol_FileDropHeader_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_rauban_dropandtransfer_model_protocol_FileDropHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_rauban_dropandtransfer_model_protocol_FileDropHeader_descriptor,
              new java.lang.String[] { "Size", "IsDir", "ResourceName", },
              com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.class,
              com.rauban.dropandtransfer.model.protocol.FileTransfer.FileDropHeader.Builder.class);
          internal_static_com_rauban_dropandtransfer_model_protocol_TransferOffer_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_rauban_dropandtransfer_model_protocol_TransferOffer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_rauban_dropandtransfer_model_protocol_TransferOffer_descriptor,
              new java.lang.String[] { "OfferId", "Ttl", "Resources", },
              com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer.class,
              com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferOffer.Builder.class);
          internal_static_com_rauban_dropandtransfer_model_protocol_TransferResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_rauban_dropandtransfer_model_protocol_TransferResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_rauban_dropandtransfer_model_protocol_TransferResponse_descriptor,
              new java.lang.String[] { "OfferId", "Accept", },
              com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse.class,
              com.rauban.dropandtransfer.model.protocol.FileTransfer.TransferResponse.Builder.class);
          internal_static_com_rauban_dropandtransfer_model_protocol_Chat_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_rauban_dropandtransfer_model_protocol_Chat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_rauban_dropandtransfer_model_protocol_Chat_descriptor,
              new java.lang.String[] { "Message", },
              com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat.class,
              com.rauban.dropandtransfer.model.protocol.FileTransfer.Chat.Builder.class);
          internal_static_com_rauban_dropandtransfer_model_protocol_FileData_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_rauban_dropandtransfer_model_protocol_FileData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_rauban_dropandtransfer_model_protocol_FileData_descriptor,
              new java.lang.String[] { "OfferId", "Data", },
              com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData.class,
              com.rauban.dropandtransfer.model.protocol.FileTransfer.FileData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
